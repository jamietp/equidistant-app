{"ast":null,"code":"import axios from 'axios';\nexport const geocodeAddress = async address => {\n  try {\n    console.log('Geocoding postcode:', address);\n    // Clean up postcode format\n    const cleanPostcode = address.trim().toUpperCase().replace(/\\s+/g, '');\n    const encodedPostcode = encodeURIComponent(cleanPostcode + ', London, UK');\n    const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${encodedPostcode}&countrycodes=gb&bounded=1&viewbox=-0.5339,51.7225,0.3177,51.2867&limit=1`, {\n      headers: {\n        'User-Agent': 'EquidistantApp/1.0'\n      }\n    });\n    if (!response.data || response.data.length === 0) {\n      console.error('Invalid postcode:', address);\n      throw new Error(`Invalid London postcode: ${address}`);\n    }\n    const result = {\n      lat: parseFloat(response.data[0].lat),\n      lon: parseFloat(response.data[0].lon),\n      display_name: response.data[0].display_name\n    };\n    console.log('Geocoding result:', result);\n    return result;\n  } catch (error) {\n    console.error('Geocoding error:', error);\n    throw new Error(`Please enter a valid London postcode`);\n  }\n};","map":{"version":3,"names":["axios","geocodeAddress","address","console","log","cleanPostcode","trim","toUpperCase","replace","encodedPostcode","encodeURIComponent","response","get","headers","data","length","error","Error","result","lat","parseFloat","lon","display_name"],"sources":["C:/Users/User1/equidistant-app/src/services/geocodingService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\ninterface GeocodingResult {\r\n  lat: number;\r\n  lon: number;\r\n  display_name: string;\r\n}\r\n\r\nexport const geocodeAddress = async (address: string): Promise<GeocodingResult> => {\r\n  try {\r\n    console.log('Geocoding postcode:', address);\r\n    // Clean up postcode format\r\n    const cleanPostcode = address.trim().toUpperCase().replace(/\\s+/g, '');\r\n    const encodedPostcode = encodeURIComponent(cleanPostcode + ', London, UK');\r\n    \r\n    const response = await axios.get(\r\n      `https://nominatim.openstreetmap.org/search?format=json&q=${encodedPostcode}&countrycodes=gb&bounded=1&viewbox=-0.5339,51.7225,0.3177,51.2867&limit=1`,\r\n      {\r\n        headers: {\r\n          'User-Agent': 'EquidistantApp/1.0'\r\n        }\r\n      }\r\n    );\r\n\r\n    if (!response.data || response.data.length === 0) {\r\n      console.error('Invalid postcode:', address);\r\n      throw new Error(`Invalid London postcode: ${address}`);\r\n    }\r\n\r\n    const result = {\r\n      lat: parseFloat(response.data[0].lat),\r\n      lon: parseFloat(response.data[0].lon),\r\n      display_name: response.data[0].display_name\r\n    };\r\n\r\n    console.log('Geocoding result:', result);\r\n    return result;\r\n  } catch (error) {\r\n    console.error('Geocoding error:', error);\r\n    throw new Error(`Please enter a valid London postcode`);\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAQzB,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAe,IAA+B;EACjF,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,OAAO,CAAC;IAC3C;IACA,MAAMG,aAAa,GAAGH,OAAO,CAACI,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IACtE,MAAMC,eAAe,GAAGC,kBAAkB,CAACL,aAAa,GAAG,cAAc,CAAC;IAE1E,MAAMM,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAC9B,4DAA4DH,eAAe,2EAA2E,EACtJ;MACEI,OAAO,EAAE;QACP,YAAY,EAAE;MAChB;IACF,CACF,CAAC;IAED,IAAI,CAACF,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MAChDZ,OAAO,CAACa,KAAK,CAAC,mBAAmB,EAAEd,OAAO,CAAC;MAC3C,MAAM,IAAIe,KAAK,CAAC,4BAA4Bf,OAAO,EAAE,CAAC;IACxD;IAEA,MAAMgB,MAAM,GAAG;MACbC,GAAG,EAAEC,UAAU,CAACT,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAACK,GAAG,CAAC;MACrCE,GAAG,EAAED,UAAU,CAACT,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAACO,GAAG,CAAC;MACrCC,YAAY,EAAEX,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAACQ;IACjC,CAAC;IAEDnB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEc,MAAM,CAAC;IACxC,OAAOA,MAAM;EACf,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EACzD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}