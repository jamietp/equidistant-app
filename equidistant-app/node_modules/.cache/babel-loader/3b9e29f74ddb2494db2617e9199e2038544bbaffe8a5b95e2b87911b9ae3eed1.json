{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User1\\\\equidistant-app\\\\src\\\\components\\\\ActivityList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { searchNearbyPlaces } from '../services/placesService';\nimport { geocodeAddress } from '../services/geocodingService';\nimport { calculateDistance } from '../utils/distance';\nimport Map from './Map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityList = () => {\n  _s();\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [locations, setLocations] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const params = new URLSearchParams(location.search);\n        const loc1 = params.get('loc1');\n        const loc2 = params.get('loc2');\n        if (!loc1 || !loc2) {\n          throw new Error('Both locations are required');\n        }\n        const [pos1, pos2] = await Promise.all([geocodeAddress(loc1), geocodeAddress(loc2)]);\n        const midLat = (pos1.lat + pos2.lat) / 2;\n        const midLon = (pos1.lon + pos2.lon) / 2;\n        setLocations({\n          location1: [pos1.lat, pos1.lon],\n          location2: [pos2.lat, pos2.lon],\n          midpoint: [midLat, midLon]\n        });\n        const nearbyPlaces = await searchNearbyPlaces(midLat, midLon, 1000);\n        const placesWithDistances = nearbyPlaces.map(place => ({\n          ...place,\n          distanceToLoc1: calculateDistance(pos1.lat, pos1.lon, place.latitude, place.longitude),\n          distanceToLoc2: calculateDistance(pos2.lat, pos2.lon, place.latitude, place.longitude)\n        }));\n        setPlaces(placesWithDistances);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlaces();\n  }, [location]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [locations && /*#__PURE__*/_jsxDEV(Map, {\n      locations: locations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Places Near Midpoint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), places.map(place => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: place.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), place.address && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: place.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Distance: \", (place.distanceToLoc1 || 0).toFixed(1), \"km from location 1,\", (place.distanceToLoc2 || 0).toFixed(1), \"km from location 2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, place.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivityList, \"QDdeSHMkqs6+PJNII4lkoTNfGT8=\", false, function () {\n  return [useLocation];\n});\n_c = ActivityList;\nexport default ActivityList;\nvar _c;\n$RefreshReg$(_c, \"ActivityList\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","searchNearbyPlaces","geocodeAddress","calculateDistance","Map","jsxDEV","_jsxDEV","ActivityList","_s","places","setPlaces","loading","setLoading","error","setError","locations","setLocations","location","fetchPlaces","params","URLSearchParams","search","loc1","get","loc2","Error","pos1","pos2","Promise","all","midLat","lat","midLon","lon","location1","location2","midpoint","nearbyPlaces","placesWithDistances","map","place","distanceToLoc1","latitude","longitude","distanceToLoc2","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","type","address","toFixed","id","_c","$RefreshReg$"],"sources":["C:/Users/User1/equidistant-app/src/components/ActivityList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Place, searchNearbyPlaces } from '../services/placesService';\nimport { geocodeAddress } from '../services/geocodingService';\nimport { calculateDistance } from '../utils/distance';\nimport Map from './Map';\n\nconst ActivityList: React.FC = () => {\n  const [places, setPlaces] = useState<Place[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [locations, setLocations] = useState<{\n    location1: [number, number];\n    location2: [number, number];\n    midpoint: [number, number];\n  } | null>(null);\n  \n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const params = new URLSearchParams(location.search);\n        const loc1 = params.get('loc1');\n        const loc2 = params.get('loc2');\n\n        if (!loc1 || !loc2) {\n          throw new Error('Both locations are required');\n        }\n\n        const [pos1, pos2] = await Promise.all([\n          geocodeAddress(loc1),\n          geocodeAddress(loc2)\n        ]);\n\n        const midLat = (pos1.lat + pos2.lat) / 2;\n        const midLon = (pos1.lon + pos2.lon) / 2;\n\n        setLocations({\n          location1: [pos1.lat, pos1.lon],\n          location2: [pos2.lat, pos2.lon],\n          midpoint: [midLat, midLon]\n        });\n\n        const nearbyPlaces = await searchNearbyPlaces(midLat, midLon, 1000);\n        const placesWithDistances = nearbyPlaces.map(place => ({\n          ...place,\n          distanceToLoc1: calculateDistance(pos1.lat, pos1.lon, place.latitude, place.longitude),\n          distanceToLoc2: calculateDistance(pos2.lat, pos2.lon, place.latitude, place.longitude)\n        }));\n\n        setPlaces(placesWithDistances);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPlaces();\n  }, [location]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      {locations && <Map locations={locations} />}\n      <div className=\"activity-list\">\n        <h2>Places Near Midpoint</h2>\n        {places.map(place => (\n          <div key={place.id} className=\"activity-item\">\n            <h3>{place.name}</h3>\n            <p>{place.type}</p>\n            {place.address && <p>{place.address}</p>}\n            <p>\n              Distance: {(place.distanceToLoc1 || 0).toFixed(1)}km from location 1, \n              {(place.distanceToLoc2 || 0).toFixed(1)}km from location 2\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}