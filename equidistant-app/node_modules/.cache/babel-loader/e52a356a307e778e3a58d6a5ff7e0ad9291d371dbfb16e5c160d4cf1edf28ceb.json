{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User1\\\\equidistant-app\\\\src\\\\components\\\\ActivityList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { searchNearbyPlaces } from '../services/placesService';\nimport { geocodeAddress } from '../services/geocodingService';\nimport { calculateDistance } from '../utils/distance';\nimport Map from './Map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityList = () => {\n  _s();\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [locations, setLocations] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const params = new URLSearchParams(location.search);\n        const loc1 = params.get('loc1');\n        const loc2 = params.get('loc2');\n        if (!loc1 || !loc2) {\n          throw new Error('Both locations are required');\n        }\n        const [pos1, pos2] = await Promise.all([geocodeAddress(loc1), geocodeAddress(loc2)]);\n        const midLat = (pos1.lat + pos2.lat) / 2;\n        const midLon = (pos1.lon + pos2.lon) / 2;\n        const newLocations = {\n          location1: [pos1.lat, pos1.lon],\n          location2: [pos2.lat, pos2.lon],\n          midpoint: [midLat, midLon]\n        };\n        setLocations(newLocations);\n        const radius = Math.ceil(calculateDistance(pos1.lat, pos1.lon, midLat, midLon)) * 1000; // Convert km to meters\n\n        const nearbyPlaces = await searchNearbyPlaces(midLat, midLon, radius);\n        const placesWithDistances = nearbyPlaces.map(place => ({\n          ...place,\n          distanceToLoc1: calculateDistance(pos1.lat, pos1.lon, place.latitude, place.longitude),\n          distanceToLoc2: calculateDistance(pos2.lat, pos2.lon, place.latitude, place.longitude)\n        }));\n        setPlaces(placesWithDistances);\n      } catch (err) {\n        console.error('Error fetching places:', err);\n        setError(err instanceof Error ? err.message : 'Failed to load places');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlaces();\n  }, [location]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading places...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 21\n  }, this);\n  if (places.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No places found near the midpoint\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [locations && /*#__PURE__*/_jsxDEV(Map, {\n      locations: locations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Places Near Midpoint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), places.map(place => {\n        var _place$distanceToLoc, _place$distanceToLoc2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: place.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), place.address && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: place.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Distance: \", (_place$distanceToLoc = place.distanceToLoc1) === null || _place$distanceToLoc === void 0 ? void 0 : _place$distanceToLoc.toFixed(1), \"km from location 1,\", (_place$distanceToLoc2 = place.distanceToLoc2) === null || _place$distanceToLoc2 === void 0 ? void 0 : _place$distanceToLoc2.toFixed(1), \"km from location 2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, place.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivityList, \"QDdeSHMkqs6+PJNII4lkoTNfGT8=\", false, function () {\n  return [useLocation];\n});\n_c = ActivityList;\nexport default ActivityList;\nvar _c;\n$RefreshReg$(_c, \"ActivityList\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","searchNearbyPlaces","geocodeAddress","calculateDistance","Map","jsxDEV","_jsxDEV","ActivityList","_s","places","setPlaces","loading","setLoading","error","setError","locations","setLocations","location","fetchPlaces","params","URLSearchParams","search","loc1","get","loc2","Error","pos1","pos2","Promise","all","midLat","lat","midLon","lon","newLocations","location1","location2","midpoint","radius","Math","ceil","nearbyPlaces","placesWithDistances","map","place","distanceToLoc1","latitude","longitude","distanceToLoc2","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_place$distanceToLoc","_place$distanceToLoc2","name","type","address","toFixed","id","_c","$RefreshReg$"],"sources":["C:/Users/User1/equidistant-app/src/components/ActivityList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Place, searchNearbyPlaces } from '../services/placesService';\nimport { geocodeAddress } from '../services/geocodingService';\nimport { calculateDistance } from '../utils/distance';\nimport Map from './Map';\n\nconst ActivityList: React.FC = () => {\n  const [places, setPlaces] = useState<Place[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [locations, setLocations] = useState<{\n    location1: [number, number];\n    location2: [number, number];\n    midpoint: [number, number];\n  } | null>(null);\n  \n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const params = new URLSearchParams(location.search);\n        const loc1 = params.get('loc1');\n        const loc2 = params.get('loc2');\n\n        if (!loc1 || !loc2) {\n          throw new Error('Both locations are required');\n        }\n\n        const [pos1, pos2] = await Promise.all([\n          geocodeAddress(loc1),\n          geocodeAddress(loc2)\n        ]);\n\n        const midLat = (pos1.lat + pos2.lat) / 2;\n        const midLon = (pos1.lon + pos2.lon) / 2;\n\n        const newLocations = {\n          location1: [pos1.lat, pos1.lon] as [number, number],\n          location2: [pos2.lat, pos2.lon] as [number, number],\n          midpoint: [midLat, midLon] as [number, number]\n        };\n        setLocations(newLocations);\n\n        const radius = Math.ceil(\n          calculateDistance(pos1.lat, pos1.lon, midLat, midLon)\n        ) * 1000; // Convert km to meters\n\n        const nearbyPlaces = await searchNearbyPlaces(midLat, midLon, radius);\n        \n        const placesWithDistances = nearbyPlaces.map(place => ({\n          ...place,\n          distanceToLoc1: calculateDistance(pos1.lat, pos1.lon, place.latitude, place.longitude),\n          distanceToLoc2: calculateDistance(pos2.lat, pos2.lon, place.latitude, place.longitude)\n        }));\n\n        setPlaces(placesWithDistances);\n      } catch (err) {\n        console.error('Error fetching places:', err);\n        setError(err instanceof Error ? err.message : 'Failed to load places');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPlaces();\n  }, [location]);\n\n  if (loading) return <div className=\"loading\">Loading places...</div>;\n  if (error) return <div className=\"error\">Error: {error}</div>;\n  if (places.length === 0) return <div>No places found near the midpoint</div>;\n\n  return (\n    <div>\n      {locations && <Map locations={locations} />}\n      <div className=\"activity-list\">\n        <h2>Places Near Midpoint</h2>\n        {places.map(place => (\n          <div key={place.id} className=\"activity-item\">\n            <h3>{place.name}</h3>\n            <p>{place.type}</p>\n            {place.address && <p>{place.address}</p>}\n            <p>\n              Distance: {place.distanceToLoc1?.toFixed(1)}km from location 1, \n              {place.distanceToLoc2?.toFixed(1)}km from location 2\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}